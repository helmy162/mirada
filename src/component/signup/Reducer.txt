/* import { SignupField } from "../signup/types";

type Action =
  | { type: "SETFIRSTNAME", payload: string }
  | { type: "SETLASTNAME"; payload: string }
  | { type: "SETPASSWORDTOGGLE"; payload: boolean }
  | { type: "SETEMAIL"; payload: string }
  | { type: "SETPASSWORD"; payload: string }
  | { type: "SETERROR"; payload: { name: errorTypes, message: string, viewerror: string} };

const Reducer = (state: SignupField, action: Action): SignupField => {
  switch (action.type) {
    case "SETFIRSTNAME":
      return {
        ...state,
        firstName: action.payload,

      }; case "SETLASTNAME":
      return {
        ...state,
        lastName: action.payload,
      }; case "SETEMAIL":
      return {
        ...state,
        email: action.payload,
      }; case "SETPASSWORD":
      return {
        ...state,
        password: action.payload,
      }; case "SETERROR":
      return {
        ...state,
        error: {name:action.payload.name, message: action.payload.message, viewerror: action.payload.viewerror},
      }; case "SETPASSWORDTOGGLE":
      return {
        ...state,
        passwordToggle: action.payload,
      };


    default:
      throw new Error("Action not supported");
  }
};

export default Reducer;
 */